[simulation]
# maximum time step duration
time_step = 0.05

# number of grid points in each direction
nx = 120
ny = 100

# size of each grid cell
dx = 0.1
dy = 0.1

# run validation state on every iteration
validate = False

# a list of initialization functions that execute
# immediately after state creation at time step 0
initialization = simulation.contrib.mutation.constant

# a list of iteration handlers that run in order
# before each time step
iteration = 
  simulation.contrib.mutation.point_source
  simulation.contrib.plot.draw_simulation
  simulation.contrib.save.save_state

# define the boundary physics as a subclass of
# boundary.BoundaryCondition
boundary_conditions = simulation.boundary.Neumann

[simulation.constant_mutation]
# configure the initialization setting the
# domain variables to constant values
diffusivity = 0.05
wind_x = 0.1
wind_y = -0.2

[simulation.point_source_mutation]
# add a point source at the middle of the
# domain with a value of 1 unit/second
px = 0.5
py = 0.5
value = 1

[simulation.plot]
# plot the simulation while it runs at most once every 0.5 seconds
draw_interval = 0.0
block = True

[simulation.save]
# save the simulation state every 1 simulation second
save_interval = 1.0
save_file_name = output/simulation-%%010.3f.pkl
